name: Build

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    PROJECT_NAME: fanqie

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - id: commit-hash
              uses: prompt/actions-commit-hash@v3

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Build
              run: |
                  echo "Build on ${{ matrix.os }} with commit hash ${{ steps.commit-hash.outputs.short }}"
                  cmake --preset=${{ runner.os }}
                  cmake --build ./build/${{ runner.os }} -j

    artifact:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - id: commit-hash
              uses: prompt/actions-commit-hash@v3
            - name: A
              run: |
                  ls ./build/Windows/
                  ls ./build/Linux/
            - name: Windows
              uses: actions/upload-artifact@v4
              with:
                  name: Windows-${{ steps.commit-hash.outputs.short }}
                  path: ./build/Windows/${{ env.PROJECT_NAME }}.dll
            - name: Linux
              uses: actions/upload-artifact@v4
              with:
                  name: Linux-${{ steps.commit-hash.outputs.short }}
                  path: ./build/Linux/${{ env.PROJECT_NAME }}.so

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Release
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  name: Release ${{ github.ref }}
                  files: |
                      ./build/Windows/${{ env.PROJECT_NAME }}.dll
                      ./build/Linux/${{ env.PROJECT_NAME }}.so
